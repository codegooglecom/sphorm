#summary Brief description how table relationships are supported

= Introduction =

Currently sphorm supports: One to One, One to Many relationships, unidirectional. Yes, in near future there will be more. 


= One to One =
To be able to use One to One relationship, you need to let know Sphorm who is your domain's brother. In this case you need to add a static array, named 'hasOne' like this:
{{{
static $hasOne = array(
	  'profile' => array(                 // property name, $obj->profile
		'type' => 'Profile',          // it's type, $obj->profile = new Profile()
		'join' => 'ProfileUserID'     // Join column, aka FK
	  )
	);
}}} 

You can have as many brothers as you want:
{{{
static $hasOne = array(
	  'profile' => array(                 
		'type' => 'Profile',          
		'join' => 'ProfileUserID'     
	   ),
          'otherProperty' => array(                 
		'type' => 'OtherClass',          
		'join' => 'OtherCOlumnId'     
	   ),
          ....
	);
}}}

= One to Many =
To define an One to Many relationship you have to make usage of 'hasMany' property:
{{{
static $hasMany = array(
		'addresses' => array(                  // $obj->addresses
			'type' => 'Address',           // array of Address instances  
			'join' => 'AddressUserID'      // same as for one to one
		),
	);
}}}


= Requirements/Limitations =
 # In all cases brothers or children have to be Sphorm domain classes too (extend Sphorm).
 # Brothers or childre are ALWAYS loaded lazy...aka they will be loaded on 1st access